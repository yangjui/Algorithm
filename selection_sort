/*
선택정렬 : 최솟값을 찾아 위치를 교환하는 정렬
아래 코드는 오름차순 정렬.

출력할 값은 정렬 후 배열, 각 인덱스에서의 교환 발생 횟수
*/


import java.util.*;

class Main {
	public static void main(String args[]){
    	int in[] = {2,5,3,1,4};  //입력된 배열
    	int len = in.length;
    	int[] after = new int[in.length];    //스왑 후 배열
        for (int i = 0; i < in.length; i++) {   //주소값 연결하지 않고 복사
        	after[i] = in[i];
        }
        //int after[] = in; ---> 주소를 이어준다. 즉 하나 바뀌면 같이 바뀜. 다른 방법으로 복사!!
        int prev[] = new int[len];      //스왑 전 배열
        int cnt[] = new int[len];   //스왑 전후 비교해서 교환횟수 카운트 후 저장할 배열
        
        for(int i = 0;i<len-1;i++) {
        	int target = i;
        	for(int j = i+1;j<len;j++) {
        		if(after[j]<after[target])   //최솟값 찾는 중
        			target = j;    //최솟값이 있는 배열 인덱스 저장
        	}
        	for(int k = 0;k<len;k++) {   //스왑 전 배열에 스왑 후 배열을 저장!!!
        		prev[k] = after[k];     //앞전의 스왑후 상태와 방금 스왑 한 상태를 비교해서 cnt 계산할 것
        	}
        	if(i != target) {   //스왑
        		int tmp = after[i];
        		after[i] = after[target];
        		after[target] = tmp;
        	}
        	for(int m = 0;m<len;m++) {
        		if(prev[m] != after[m])
        			cnt[m]++;   //cnt배열은 각 인덱스마다 계산해야해서 배열 처리
        	}
        }
        
        for(int i = 0; i < len; i++)
        	System.out.println(after[i] + " 교환 횟수 : " + cnt[i]);
    }
}
